apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "icx.fullname" . }}-asm
  labels:
    app: {{ template "icx.name" . }}
    module: asm
    chart: {{ template "icx.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.asm.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ template "icx.name" . }}
      module: asm
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "icx.name" . }}
        module: asm
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.asm.image.repository }}:{{ default .Chart.AppVersion .Values.asm.image.tag }}"
          imagePullPolicy: {{ .Values.asm.image.pullPolicy }}
          # command:
          # - powershell.exe
          # - -command
          # - "Add-WindowsFeature Web-Server; Invoke-WebRequest -UseBasicParsing -Uri 'https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.6/ServiceMonitor.exe' -OutFile 'C:\\ServiceMonitor.exe'; echo '<html><body><br/><br/><marquee><H1>Hello EKS!!!<H1><marquee></body><html>' > C:\\inetpub\\wwwroot\\default.html; C:\\ServiceMonitor.exe 'w3svc'; "
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /asm/all/servicelocation.svc
              port: http
            failureThreshold: 2
            initialDelaySeconds: 180
            timeoutSeconds: 10
            periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /asm/all/servicelocation.svc
          #     port: http
          #   failureThreshold: 30
          #   successThreshold: 3
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 1
          #   periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - curl
                - --fail
                - -d
                - "{ query: '{ global { dsns { name } cultures { items { name } } } }' }"
                - -H 
                - "Content-Type: application/json"
                - -X POST
                - http://localhost/asm/all/graphql/csr/api
            failureThreshold: 30
            successThreshold: 3
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /asm/all/servicelocation.svc
              port: http
            failureThreshold: 30
            successThreshold: 1
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 10
          # startupProbe:
          #   exec:
          #     command:
          #       - curl
          #       - --fail
          #       - -d
          #       - "{ query: '{ global { dsns { name } cultures { items { name } } } }' }"
          #       - -H 
          #       - "Content-Type: application/json"
          #       - -X POST
          #       - http://localhost/asm/all/graphql/csr/api
          #   failureThreshold: 30
          #   initialDelaySeconds: 1
          #   timeoutSeconds: 1
          #   periodSeconds: 5
          resources:
{{ toYaml .Values.asm.resources | indent 12 }}
    {{- with .Values.asm.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.asm.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.asm.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
